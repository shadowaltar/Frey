<controls:MetroWindow xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
                      xmlns:cal="http://www.caliburnproject.org"
                      xmlns:utils="clr-namespace:Maintenance.PagReport.Utils"
                      x:Class="Maintenance.PagReport.ViewModels.MainView"
                      ShowTitleBar="True" ShowTitleText="False" ShowIconOnTitleBar="False"
                      Style="{DynamicResource CleanWindowStyleKey}"
                      GlowBrush="{StaticResource AccentColorBrush}"
                      ShowWindowCommandsOnTop="True" Icon="../icon.ico"
                      cal:Message.Attach="[Event KeyDown] = [Action HandleShortcutKeys($eventArgs)]"
                      Height="600" Width="1050" BorderThickness="1">
    <controls:MetroWindow.Resources>
        <utils:BooleanStringFormatConverter x:Key="BooleanStringFormatConverter"/>
    </controls:MetroWindow.Resources>
    <controls:MetroWindow.WindowCommands>
        <controls:WindowCommands>
            <Button cal:Message.Attach="About" Content="About" />
        </controls:WindowCommands>
    </controls:MetroWindow.WindowCommands>

    <controls:MetroWindow.Flyouts>
        <controls:FlyoutsControl>
            <controls:Flyout Header="{Binding FlyoutHeader}" Position="Right" Theme="Accent"
                             Background="{StaticResource HighlightBrush}"
                             Foreground="{StaticResource IdealForegroundColorBrush}"
                             IsOpen="{Binding IsEditIndexFlyoutOpened}">
                <ContentControl cal:View.Model="{Binding EditIndexFlyout}" />
            </controls:Flyout>
            <controls:Flyout Header="{Binding FlyoutHeader}" Position="Right" Theme="Accent"
                             Background="{StaticResource HighlightBrush}"
                             Foreground="{StaticResource IdealForegroundColorBrush}"
                             IsOpen="{Binding IsEditPortfolioFlyoutOpened}">
                <ContentControl cal:View.Model="{Binding EditPortfolioFlyout}" />
            </controls:Flyout>
            <controls:Flyout Header="{Binding FlyoutHeader}" Position="Right" Theme="Accent"
                             Background="{StaticResource HighlightBrush}"
                             Foreground="{StaticResource IdealForegroundColorBrush}"
                             IsOpen="{Binding IsEditHeadStockOverrideFlyoutOpened}">
                <ContentControl cal:View.Model="{Binding EditHeadStockOverrideFlyout}" />
            </controls:Flyout>
            <controls:Flyout Header="{Binding FlyoutHeader}" Position="Right" Theme="Accent"
                             Background="{StaticResource HighlightBrush}"
                             Foreground="{StaticResource IdealForegroundColorBrush}"
                             IsOpen="{Binding IsEditBarraIdOverrideFlyoutOpened}">
                <ContentControl cal:View.Model="{Binding EditBarraIdOverrideFlyout}" />
            </controls:Flyout>
            <controls:Flyout Header="Options" Position="Right" Theme="Accent"
                             Background="{StaticResource HighlightBrush}"
                             Foreground="{StaticResource IdealForegroundColorBrush}"
                             IsOpen="{Binding IsOptionsFlyoutOpen}">
                <ContentControl cal:View.Model="{Binding OptionsFlyout}" />
            </controls:Flyout>
        </controls:FlyoutsControl>
    </controls:MetroWindow.Flyouts>

    <Grid Margin="60,5,60,60">
        <Grid.RowDefinitions>
            <RowDefinition Height="64" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <DockPanel Grid.Row="0" LastChildFill="False">
            <Label DockPanel.Dock="Left" FontSize="32" FontFamily="Segoe UI Light" x:Name="DisplayName"
				Content="PAG REPORT MAINTENANCE (XXX)" />
            <StackPanel DockPanel.Dock="Right" VerticalAlignment="Center" Orientation="Horizontal">
                <!--Add-->
                <Button x:Name="Add"
					Width="40" Height="40" Margin="5,0,5,0" Style="{StaticResource MetroCircleButtonStyle}"
					ToolTip="New Entry (Ctrl+N)">
                    <Rectangle Width="16" Height="16">
                        <Rectangle.Fill>
                            <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_add}" />
                        </Rectangle.Fill>
                    </Rectangle>
                </Button>
                <!--Edit-->
                <Button x:Name="Edit"
                        Width="40" Height="40" Margin="5,0,5,0" Style="{StaticResource MetroCircleButtonStyle}"
                        ToolTip="Edit Entry (Ctrl+E)">
                    <Rectangle Width="16" Height="16">
                        <Rectangle.Fill>
                            <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_edit}" />
                        </Rectangle.Fill>
                    </Rectangle>
                </Button>
                <!--Delete-->
                <Button x:Name="Delete"
                        Width="40" Height="40" Margin="5,0,5,0" Style="{StaticResource MetroCircleButtonStyle}"
                        ToolTip="Delete Entry (Ctrl+D)">
                    <Rectangle Width="16" Height="16">
                        <Rectangle.Fill>
                            <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_delete}" />
                        </Rectangle.Fill>
                    </Rectangle>
                </Button>
                <!--Refresh-->
                <Button x:Name="Load"
					Width="40" Height="40" Margin="5,0,5,0" Style="{StaticResource MetroCircleButtonStyle}"
					ToolTip="Refresh (Ctrl+R)">
                    <Rectangle Width="16" Height="16">
                        <Rectangle.Fill>
                            <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_refresh}" />
                        </Rectangle.Fill>
                    </Rectangle>
                </Button>
                <!--More Options-->
                <Button x:Name="ToggleOptions"
					Width="40" Height="40" Margin="5,0,5,0" Style="{StaticResource MetroCircleButtonStyle}"
					ToolTip="More Options (Ctrl+O)">
                    <Rectangle Width="4" Height="16">
                        <Rectangle.Fill>
                            <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_more_vertical}" />
                        </Rectangle.Fill>
                    </Rectangle>
                </Button>
            </StackPanel>
        </DockPanel>

        <controls:MetroAnimatedSingleRowTabControl Grid.Row="1" IsEnabled="{Binding IsTabsEnabled}">
            <TabItem Header="INDEXES" IsSelected="{Binding IsInIndexView}">
                <DataGrid x:Name="Indexes" Margin="0,0,5,0"
                          VerticalScrollBarVisibility="Visible"
                          AutoGenerateColumns="False" CanUserAddRows="False"
                          SelectionUnit="FullRow" SelectionMode="Extended" IsReadOnly="True">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Code" Binding="{Binding Code}" Width="auto"/>
                        <DataGridTextColumn Header="Name" Binding="{Binding Name}" Width="*"/>
                        <DataGridTextColumn Header="Headstock Report" Binding="{Binding IsInHeadStockReport, Converter={StaticResource BooleanStringFormatConverter}}" Width="140"/>
                        <DataGridTextColumn Header="Barra Regional" Binding="{Binding IsInBarraRegional, Converter={StaticResource BooleanStringFormatConverter}}" Width="140"/>
                        <DataGridTextColumn Header="Barra Japan" Binding="{Binding IsInBarraJapan, Converter={StaticResource BooleanStringFormatConverter}}" Width="140"/>
                        <DataGridTextColumn Header="Barra Australia" Binding="{Binding IsInBarraAustralia, Converter={StaticResource BooleanStringFormatConverter}}" Width="140"/>
                    </DataGrid.Columns>
                </DataGrid>
            </TabItem>
            <TabItem Header="PORTFOLIOS" IsSelected="{Binding IsInPortfolioView}">
                <DataGrid x:Name="Portfolios" Margin="0,0,5,0"
                          VerticalScrollBarVisibility="Visible"
                          AutoGenerateColumns="False" CanUserAddRows="False"
                          SelectionUnit="FullRow" SelectionMode="Extended" IsReadOnly="True">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Code" Binding="{Binding Code}" Width="auto"/>
                        <DataGridTextColumn Header="Name" Binding="{Binding Name}" Width="*"/>
                        <DataGridTextColumn Header="Headstock Report" Binding="{Binding IsInHeadStockReport, Converter={StaticResource BooleanStringFormatConverter}}" Width="140"/>
                        <DataGridTextColumn Header="Barra Regional" Binding="{Binding IsInBarraRegional, Converter={StaticResource BooleanStringFormatConverter}}" Width="140"/>
                        <DataGridTextColumn Header="Barra Japan" Binding="{Binding IsInBarraJapan, Converter={StaticResource BooleanStringFormatConverter}}" Width="140"/>
                        <DataGridTextColumn Header="Barra Australia" Binding="{Binding IsInBarraAustralia, Converter={StaticResource BooleanStringFormatConverter}}" Width="140"/>
                    </DataGrid.Columns>
                </DataGrid>
            </TabItem>
            <TabItem Header="HEADSTOCKS" IsSelected="{Binding IsInHeadStockOverrideView}">
                <DataGrid x:Name="HeadStockOverrides" Margin="0,0,5,0"
                          VerticalScrollBarVisibility="Visible"
                          AutoGenerateColumns="False" CanUserAddRows="False"
                          SelectionUnit="FullRow" SelectionMode="Extended" IsReadOnly="True">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="CUSIP" Binding="{Binding Cusip}" Width="auto"/>
                        <DataGridTextColumn Header="Security Name" Binding="{Binding Name}" Width="*"/>
                        <DataGridTextColumn Header="Type" Binding="{Binding Type}" Width="150"/>
                        <DataGridTextColumn Header="New CUSIP" Binding="{Binding NewSecurity.Cusip}" Width="auto"/>
                        <DataGridTextColumn Header="New Security Name" Binding="{Binding NewSecurity.Name}" Width="*"/>
                    </DataGrid.Columns>
                </DataGrid>
            </TabItem>
            <TabItem Header="BARRA ID" IsSelected="{Binding IsInBarraIdOverrideView}">
                <DataGrid x:Name="BarraIdOverrides" Margin="0,0,5,0"
                          VerticalScrollBarVisibility="Visible"
                          AutoGenerateColumns="False" CanUserAddRows="False"
                          SelectionUnit="FullRow" SelectionMode="Extended" IsReadOnly="True">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="CUSIP" Binding="{Binding Cusip}" Width="auto"/>
                        <DataGridTextColumn Header="Security Name" Binding="{Binding Name}" Width="*"/>
                        <DataGridTextColumn Header="Type" Binding="{Binding Type}" Width="150"/>
                        <DataGridTextColumn Header="Barra Id" Binding="{Binding BarraId}" Width="150"/>
                    </DataGrid.Columns>
                </DataGrid>
            </TabItem>
        </controls:MetroAnimatedSingleRowTabControl>
    </Grid>
</controls:MetroWindow>