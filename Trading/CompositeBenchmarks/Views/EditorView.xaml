<controls:MetroWindow x:Class="Maintenance.CompositeBenchmarks.Views.EditorView"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                      xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
                      xmlns:cal="http://www.caliburnproject.org"
                      GlowBrush="{StaticResource HighlightBrush}"
                      ShowIconOnTitleBar="False" Icon="../icon.ico"
                      mc:Ignorable="d" d:DesignHeight="500"
                      Width="800" Height="700">
    <controls:MetroWindow.Resources>
        <ResourceDictionary>
            <Style TargetType="Button" BasedOn="{StaticResource AccentedSquareButtonStyle}" />
            <Style TargetType="TextBlock" BasedOn="{StaticResource TextBlockStyle}" />
        </ResourceDictionary>
    </controls:MetroWindow.Resources>
    <DockPanel Margin="20">
        <UniformGrid DockPanel.Dock="Bottom" Rows="1">
            <Button Margin="10" x:Name="Save" ToolTip="Save the portfolio and asset map link, as well as the composite benchmark">Save</Button>
            <Button Margin="10" x:Name="Reset" ToolTip="Undo and reset to initial status">Clear And Reset</Button>
        </UniformGrid>
        <Grid DockPanel.Dock="Top">
            <Grid.Resources>
                <Style TargetType="TextBlock" BasedOn="{StaticResource TextBlockStyle}" />
                <Style TargetType="ComboBox" BasedOn="{StaticResource DropdownTextStyle}" />
                <Style TargetType="TextBox" BasedOn="{StaticResource TextBoxStyle}">
                    <Setter Property="controls:TextboxHelper.SelectAllOnFocus" Value="True" />
                    <Setter Property="CharacterCasing" Value="Upper" />
                </Style>
                <Style TargetType="DatePicker" BasedOn="{StaticResource DatePickerStyle}"></Style>
            </Grid.Resources>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Row="0" Grid.Column="0">Portfolio</TextBlock>
            <ComboBox Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="3" x:Name="Portfolios" ItemTemplate="{StaticResource CodeNameItemDataTemplate}" />
            <TextBlock Grid.Row="1" Grid.Column="0">Asset Map</TextBlock>
            <ComboBox Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="3" x:Name="AssetMaps" ItemTemplate="{StaticResource NameItemDataTemplate}" />

            <TextBlock Grid.Row="4" Grid.Column="0">Effective Date</TextBlock>
            <DatePicker Grid.Row="4" Grid.Column="1" HorizontalAlignment="Stretch"
                        x:Name="EffectiveDate"
                        IsEnabled="{Binding IsEffectiveDateEnabled}"
                        SelectedDate="{Binding EffectiveDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, TargetNullValue=''}"/>
            <TextBlock Grid.Row="4" Grid.Column="2">Expiry Date</TextBlock>
            <DatePicker Grid.Row="4" Grid.Column="3" HorizontalAlignment="Stretch" IsEnabled="False"
                        x:Name="ExpiryDate"
                        SelectedDate="{Binding ExpiryDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, TargetNullValue=''}"/>
        </Grid>
        
        <TextBlock DockPanel.Dock="Top" Style="{StaticResource TextBlockStyle}">Assign benchmarks and weights to ASM nodes:</TextBlock>
        <DockPanel DockPanel.Dock="Top">
            <Label DockPanel.Dock="Right" Width="40" HorizontalAlignment="Left" VerticalAlignment="Center" Padding="0">CLEAR</Label>
            <TextBlock DockPanel.Dock="Right" Width="100" TextAlignment="Center">Weight%</TextBlock>
            <TextBlock DockPanel.Dock="Right" Width="250" TextAlignment="Center">Benchmark</TextBlock>
            <TextBlock DockPanel.Dock="Left">ASM Component</TextBlock>
        </DockPanel>
        <StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal" HorizontalAlignment="Right">
            <TextBlock>Total Weight:</TextBlock>
            <TextBlock Width="100" TextAlignment="Center" Text="{Binding TotalWeight}" />
        </StackPanel>
        <TreeView x:Name="BenchmarkComponents"
                  Margin="5,0">
            <TreeView.ItemContainerStyle>
                <Style TargetType="TreeViewItem" BasedOn="{StaticResource MetroTreeViewItem}">
                    <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                    <Setter Property="Visibility" Value="{Binding IsVisible, Mode=TwoWay, Converter={StaticResource BoolToVis}}" />
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                </Style>
            </TreeView.ItemContainerStyle>
            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                    <DockPanel TextBlock.TextAlignment="Left" Height="30">
                        <Button x:Name="ClearComponent" DockPanel.Dock="Right"
                                HorizontalAlignment="Center" VerticalAlignment="Center"
                                cal:Message.Attach="[Event Click] = [Action ClearBenchmarkComponent($datacontext)]" 
                                Width="30" Height="30" Margin="5,0" Style="{StaticResource MetroCircleButtonStyle}"
                                ToolTip="Clear benchmark">
                            <Rectangle Width="12" Height="12">
                                <Rectangle.Fill>
                                    <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_close}" />
                                </Rectangle.Fill>
                            </Rectangle>
                        </Button>
                        <TextBox DockPanel.Dock="Right" Width="100"
                                 x:Name="Weight"
                                 Text="{Binding Weight, Mode=TwoWay, FallbackValue=-1, TargetNullValue=-1,
                            UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}"
                                 controls:TextboxHelper.SelectAllOnFocus="True"
                                 TextAlignment="Center" VerticalContentAlignment="Center"/>
                        <ComboBox DockPanel.Dock="Right"
                                  x:Name="Index"
                                  ItemsSource="{Binding DataContext.Indexes, RelativeSource={RelativeSource AncestorType=controls:MetroWindow}}"
                                  SelectedItem="{Binding Index, Mode=TwoWay}"
                                  Width="250" VerticalContentAlignment="Center">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal" TextBlock.TextAlignment="Left">
                                        <TextBlock Text="{Binding Code}" VerticalAlignment="Center" />
                                        <TextBlock Text=", " VerticalAlignment="Center" />
                                        <TextBlock Text="{Binding Name}" Foreground="{StaticResource AccentColorBrush}" VerticalAlignment="Center" />
                                    </StackPanel>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                        <TextBlock DockPanel.Dock="Left" Text="{Binding AssetMapComponent.Name}" VerticalAlignment="Center"/>
                    </DockPanel>
                    <HierarchicalDataTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsAggregated}" Value="True">
                            <Setter TargetName="Index" Property="IsEnabled" Value="False" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsAggregated}" Value="False">
                            <Setter TargetName="Index" Property="IsEnabled" Value="True" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding CanChangeWeight}" Value="True">
                            <Setter TargetName="Weight" Property="IsEnabled" Value="True" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding CanChangeWeight}" Value="False">
                            <Setter TargetName="Weight" Property="IsEnabled" Value="False" />
                        </DataTrigger>
                    </HierarchicalDataTemplate.Triggers>
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
        </TreeView>
    </DockPanel>
</controls:MetroWindow>
