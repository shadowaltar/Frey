<controls:MetroWindow x:Class="Maintenance.CompositeBenchmarks.Views.MainView"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
                      xmlns:cal="http://www.caliburnproject.org"
                      ShowWindowCommandsOnTop="False"
                      GlowBrush="{StaticResource HighlightBrush}"
                      cal:Message.Attach="[Event KeyDown] = [Action HandleShortcutKeys($eventArgs)]" 
                      Style="{DynamicResource CleanWindowStyleKey}"
                      ShowIconOnTitleBar="False" ShowTitleText="False" Icon="../icon.ico"
                      Height="650" Width="1100">
    <controls:MetroWindow.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    </controls:MetroWindow.Resources>
    <controls:MetroWindow.WindowCommands>
        <controls:WindowCommands>
            <Button cal:Message.Attach="About" Content="About" />
        </controls:WindowCommands>
    </controls:MetroWindow.WindowCommands>

    <controls:MetroWindow.Flyouts>
        <controls:FlyoutsControl>
            <controls:Flyout Header="Add Composite Benchmark" Position="Right"
                             Background="{StaticResource HighlightBrush}"
                             Foreground="{StaticResource IdealForegroundColorBrush}"
                             IsModal="True" IsOpen="{Binding IsAddFlyoutOpen}">
                <ContentControl cal:View.Model="{Binding AddFlyout}"/>
            </controls:Flyout>
            <controls:Flyout Header="Options" Position="Right"
                             Background="{StaticResource HighlightBrush}"
                             Foreground="{StaticResource IdealForegroundColorBrush}"
                             IsOpen="{Binding IsOptionsFlyoutOpen}">
                <ContentControl cal:View.Model="{Binding OptionsFlyout}"/>
            </controls:Flyout>
        </controls:FlyoutsControl>
    </controls:MetroWindow.Flyouts>

    <Grid Margin="60,0,60,60">
        <Grid.RowDefinitions>
            <RowDefinition Height="64"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*" />
            <ColumnDefinition Width="1.618*" />
            <ColumnDefinition Width="1*" />
        </Grid.ColumnDefinitions>
        <Label Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Style="{StaticResource LabelTitleStyle}" x:Name="DisplayName"
                   Content="Composite Benchmark Maintenance (XXX)"/>
        <StackPanel Grid.Row="0" Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Right" Orientation="Horizontal">
            <!--Add-->
            <Button x:Name="Add"
                        Width="40" Height="40" Margin="5,0,5,0" Style="{StaticResource MetroCircleButtonStyle}"
                        ToolTip="New Composite Benchmark (Ctrl+N)">
                <Rectangle Width="16" Height="16">
                    <Rectangle.Fill>
                        <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_add}" />
                    </Rectangle.Fill>
                </Rectangle>
            </Button>
            <!--Edit-->
            <Button x:Name="Edit"
                        Width="40" Height="40" Margin="5,0,5,0" Style="{StaticResource MetroCircleButtonStyle}"
                        ToolTip="Edit (Ctrl+E)">
                <Rectangle Width="16" Height="16">
                    <Rectangle.Fill>
                        <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_edit}" />
                    </Rectangle.Fill>
                </Rectangle>
            </Button>
            <!--Refresh-->
            <Button x:Name="Refresh"
                        Width="40" Height="40" Margin="5,0,5,0" Style="{StaticResource MetroCircleButtonStyle}"
                        ToolTip="Refresh (Ctrl+R)">
                <Rectangle Width="16" Height="16">
                    <Rectangle.Fill>
                        <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_refresh}" />
                    </Rectangle.Fill>
                </Rectangle>
            </Button>
            <!--More Options-->
            <Button x:Name="ToggleOptions"
                        Width="40" Height="40" Margin="5,0,5,0" Style="{StaticResource MetroCircleButtonStyle}"
                        ToolTip="More Options (Ctrl+O)">
                <Rectangle Width="4" Height="16">
                    <Rectangle.Fill>
                        <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_more_vertical}" />
                    </Rectangle.Fill>
                </Rectangle>
            </Button>
        </StackPanel>

        <TextBlock Grid.Row="1" Grid.Column="0" Margin="0,0,5,10" Style="{StaticResource SessionTitleStyle}" 
                   Text="Composite Benchmarks"/>
        <TreeView x:Name="Portfolios" Grid.Row="2" Grid.Column="0"
                  Margin="0,0,5,0"
                  cal:Message.Attach="[Event SelectedItemChanged] = [Action SelectPortfolioOrCompositeBenchmark($this.SelectedItem)]">
            <TreeView.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Expand All" cal:Message.Attach="ExpandAllCompositeBenchmarks" />
                    <MenuItem Header="Collapse All" cal:Message.Attach="CollapseAllCompositeBenchmarks" />
                </ContextMenu>
            </TreeView.ContextMenu>
            <TreeView.ItemContainerStyle>
                <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource TreeItemStyle}">
                    <Setter Property="cal:Message.Attach" Value="[Event MouseDoubleClick] = [Action HandleDoubleClick($this)]" />
                </Style>
            </TreeView.ItemContainerStyle>
            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                    <HierarchicalDataTemplate.ItemTemplate>
                        <DataTemplate>
                            <StackPanel TextBlock.TextAlignment="Left">
                                <TextBlock>
                                    <TextBlock Text="{Binding AssetMapName}" />
                                    <TextBlock Margin="5,0,0,0" Text="(Expired)">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsExpired}" Value="True">
                                                        <Setter Property="Visibility" Value="Visible" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding IsExpired}" Value="False">
                                                        <Setter Property="Visibility" Value="Hidden" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </TextBlock>
                                <TextBlock>
                                    <TextBlock Text="{Binding FormattedEffectiveDate}"/>
                                    <TextBlock> - </TextBlock>
                                    <TextBlock Text="{Binding FormattedExpiryDate}"/>
                                </TextBlock>
                            </StackPanel>
                        </DataTemplate>
                    </HierarchicalDataTemplate.ItemTemplate>
                    <TextBlock TextAlignment="Left">
                        <TextBlock Text="{Binding Code}"/>
                        <TextBlock Text=", " />
                        <TextBlock Text="{Binding Name}" Foreground="{StaticResource AccentColorBrush}"/>
                    </TextBlock>
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
        </TreeView>

        <TextBlock Grid.Row="1" Grid.Column="1" Margin="5,0,0,10" Style="{StaticResource SessionTitleStyle}"
                   Text="Components" />
        <TreeView x:Name="CompositeBenchmarkItems" Grid.Row="2" Grid.Column="1"
                  Margin="5,0"
                  cal:Message.Attach="[Event SelectedItemChanged] = [Action SelectBenchmarkComponent($this.SelectedItem)]"
                  ItemContainerStyle="{StaticResource TreeItemStyle}">
            <TreeView.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Expand All" cal:Message.Attach="ExpandAllCompositeBenchmarkComponents" />
                    <MenuItem Header="Collapse All" cal:Message.Attach="CollapseAllCompositeBenchmarkComponents" />
                </ContextMenu>
            </TreeView.ContextMenu>
            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                    <HierarchicalDataTemplate.Resources>
                        <Style TargetType="TextBlock">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsReal}" Value="False">
                                    <Setter Property="Foreground" Value="{StaticResource MenuItemDisabledBrush}"></Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </HierarchicalDataTemplate.Resources>
                    <StackPanel Orientation="Horizontal" TextBlock.TextAlignment="Left">
                        <TextBlock x:Name="BenchmarkComponentItem">
                            <TextBlock Text="{Binding AssetMapComponent.Name}" />
                            :
                            <TextBlock Text="{Binding Index.Code}" Foreground="{StaticResource AccentColorBrush}"/>
                            (<TextBlock Text="{Binding Weight}"/>%)
                        </TextBlock>
                    </StackPanel>
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
        </TreeView>

        <TextBlock Grid.Row="1" Grid.Column="2" Margin="5,0,0,10" Style="{StaticResource SessionTitleStyle}"
                   Text="Information" />
        <StackPanel Grid.Row="2" Grid.Column="2" Orientation="Vertical" Margin="5,0,0,0">
            <Grid>
                <Grid.Resources>
                    <Style BasedOn="{StaticResource BodyTextStyle}" TargetType="{x:Type TextBlock}" />
                </Grid.Resources>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Row="0" Grid.ColumnSpan="2" Style="{StaticResource ItemTitleTextStyle}">Link of Portfolio &amp; AssetMap</TextBlock>
                <TextBlock Grid.Row="2" Grid.Column="0">Effective Date</TextBlock>
                <TextBlock Grid.Row="2" Grid.Column="1" Text="{Binding SelectedPortfolioAssetMapLink.FormattedEffectiveDate}"/>
                <TextBlock Grid.Row="3" Grid.Column="0">Expiry Date</TextBlock>
                <TextBlock Grid.Row="3" Grid.Column="1" Text="{Binding SelectedPortfolioAssetMapLink.FormattedExpiryDate}"/>

                <TextBlock Grid.Row="4" Grid.ColumnSpan="2" Style="{StaticResource ItemTitleTextStyle}">Portfolio</TextBlock>
                <TextBlock Grid.Row="5" Grid.Column="0">Code</TextBlock>
                <TextBlock Grid.Row="5" Grid.Column="1" Text="{Binding SelectedPortfolio.Code}"/>
                <TextBlock Grid.Row="6" Grid.Column="0">Name</TextBlock>
                <TextBlock Grid.Row="6" Grid.Column="1" Text="{Binding SelectedPortfolio.Name}" TextWrapping="WrapWithOverflow"/>

                <TextBlock Grid.Row="7" Grid.ColumnSpan="2" Style="{StaticResource ItemTitleTextStyle}">Asset Map</TextBlock>
                <TextBlock Grid.Row="8" Grid.Column="0">Name</TextBlock>
                <TextBlock Grid.Row="8" Grid.Column="1" Text="{Binding SelectedPortfolioAssetMapLink.AssetMapName}"/>

                <TextBlock Grid.Row="9" Grid.ColumnSpan="2" Style="{StaticResource ItemTitleTextStyle}">Composite Benchmark Item</TextBlock>
                <TextBlock Grid.Row="10" Grid.Column="0">ASM Component</TextBlock>
                <TextBlock Grid.Row="10" Grid.Column="1" Text="{Binding SelectedCompositeBenchmarkItem.AssetMapComponent.Name}"/>
                <TextBlock Grid.Row="11" Grid.Column="0">Index Code</TextBlock>
                <TextBlock Grid.Row="11" Grid.Column="1" Text="{Binding SelectedCompositeBenchmarkItem.Index.Code}"/>
                <TextBlock Grid.Row="12" Grid.Column="0">Index Name</TextBlock>
                <TextBlock Grid.Row="12" Grid.Column="1" Text="{Binding SelectedCompositeBenchmarkItem.Index.Name}" TextWrapping="WrapWithOverflow"/>
                <TextBlock Grid.Row="13" Grid.Column="0">Weight %</TextBlock>
                <StackPanel Grid.Row="13" Grid.Column="1" Orientation="Horizontal">
                    <TextBlock Text="{Binding SelectedCompositeBenchmarkItem.Weight}"/>
                    <TextBlock Visibility="{Binding SelectedCompositeBenchmarkItem.IsAggregated, TargetNullValue=Collapsed, FallbackValue=Collapsed,
                        Converter={StaticResource BooleanToVisibilityConverter}}">(Aggregated)</TextBlock>
                </StackPanel>
            </Grid>
        </StackPanel>
    </Grid>
</controls:MetroWindow>

